Checks: >
  -*,
  bugprone-*,
  cert-*,
  cppcoreguidelines-*,
  misc-*,
  modernize-*,
  performance-*,
  portability-*,
  readability-*,
  -modernize-use-trailing-return-type

CheckOptions:
  # Type-like identifiers
  - { key: readability-identifier-naming.ClassCase,              value: CamelCase }
  - { key: readability-identifier-naming.StructCase,             value: CamelCase }
  - { key: readability-identifier-naming.UnionCase,              value: CamelCase }
  - { key: readability-identifier-naming.EnumCase,               value: CamelCase }
  - { key: readability-identifier-naming.TypedefCase,            value: CamelCase }
  - { key: readability-identifier-naming.NamespaceCase,          value: CamelCase }

  # Enum members
  - { key: readability-identifier-naming.EnumConstantCase,       value: CamelCase }

  # Functions and methods
  - { key: readability-identifier-naming.FunctionCase,           value: CamelCase }
  - { key: readability-identifier-naming.MethodCase,             value: CamelCase }

  # Macros & Global Constants
  - { key: readability-identifier-naming.MacroCase,              value: UPPER_CASE }
  - { key: readability-identifier-naming.GlobalConstantCase,     value: UPPER_CASE }

  # Function Parameters
  - { key: readability-identifier-naming.ParameterCase,          value: snake_case }
  - { key: readability-identifier-naming.ParameterSuffix,        value: _ }

  # Template Parameters
  - { key: readability-identifier-naming.TemplateParameterCase,  value: snake_case }
  - { key: readability-identifier-naming.TemplateParameterSuffix,value: _ }

  # Variables
  - { key: readability-identifier-naming.LocalVariableCase,      value: snake_case }
  - { key: readability-identifier-naming.GlobalVariableCase,     value: snake_case }

  # Member Variables
  - { key: readability-identifier-naming.PrivateMemberCase,      value: snake_case }
  - { key: readability-identifier-naming.PrivateMemberPrefix,    value: m_ }
  - { key: readability-identifier-naming.PublicMemberCase,       value: snake_case }
